@model JobPortal.Models.Job

@{
    ViewBag.Title = "AddJob";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/bootstrap-theme.min.css" rel="stylesheet" />
    <link href="~/css/fontAwesome.css" rel="stylesheet" />
    <link href="~/css/hero-slider.css" rel="stylesheet" />
    <link href="~/css/owl-carousel.css" rel="stylesheet" />
    <link href="~/css/style.css" rel="stylesheet" />
    <link href="~/css/StyleSheet1.css" rel="stylesheet" />
    <link href="~/css/linearicons.css" rel="stylesheet" />
    <script src="~/js/vendor/bootstrap.js"></script>
    <script src="~/js/vendor/bootstrap.min.js"></script>
    <script src="~/js/vendor/jquery-1.11.2.min.js"></script>
    <script src="~/js/vendor/modernizr-2.8.3-respond-1.4.2.min.js"></script>
    <script src="~/js/vendor/npm.js"></script>
    <script src="~/js/datepicker.js"></script>
    <script src="~/js/main.js"></script>
    <script src="~/js/plugins.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <center>
        <div class="box-Addjob">
            <div class="form-horizontal">
                <div class="section-heading">
                    <span>Add job</span>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.C_Name, new { htmlAttributes = new { @class = "form-controls", placeholder = "Company name" } })
                        @Html.ValidationMessageFor(model => model.C_Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.J_Name, new SelectList(new[] {
                            new SelectListItem { Text = "Software Developer", Value = "Software Developer" },
                            new SelectListItem { Text = "Test Engineer", Value = "Test Engineer" },
                            new SelectListItem { Text = "AI/ML Engineer", Value = "AI/ML Engineer" },
                            new SelectListItem { Text = "Appforms Developer", Value = "Appforms Developer" }
                            }, "Value", "Text"), "-- Select Job Title --", new { @class = "form-controls", placeholder = "Enter the jobtitle", @id = "fname", @onfocusout = " validateName() " })
                        @Html.ValidationMessageFor(model => model.J_Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.J_Field, new SelectList(new[] {
                            new SelectListItem { Text = "IT", Value = "IT" },
                            new SelectListItem { Text = "BPO", Value = "BPO" },
                            }, "Value", "Text"), "-- Select Field --", new { @class = "form-controls", placeholder = "Field" } )
                        @Html.ValidationMessageFor(model => model.J_Field, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Vacancy, new { htmlAttributes = new { @class = "form-controls", placeholder = "Total vacancies" } })
                        @Html.ValidationMessageFor(model => model.Vacancy, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-controls", placeholder = "Package" } })
                        @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Locaion, new { htmlAttributes = new { @class = "form-controls", placeholder = "Location" } })
                        @Html.ValidationMessageFor(model => model.Locaion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.J_Description, new { htmlAttributes = new { @class = "description", placeholder = "Job description" } })
                        @Html.ValidationMessageFor(model => model.J_Description, "", new { @class = "text-danger" })
                    </div>
                </div>




                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="s-button" />
                    </div>
                </div>
            </div>
        </div>
    </center>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
